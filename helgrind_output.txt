==684== Helgrind, a thread error detector
==684== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==684== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==684== Command: ./philosophers 2 800 200 200 10
==684== Parent PID: 677
==684== 
==684== ---Thread-Announcement------------------------------------------
==684== 
==684== Thread #2 was created
==684==    at 0x49A7E77: clone (clone.S:62)
==684==    by 0x493EA53: create_thread (pthread_create.c:295)
==684==    by 0x493F433: pthread_create@@GLIBC_2.34 (pthread_create.c:831)
==684==    by 0x488F81B: pthread_create_WRK (hg_intercepts.c:445)
==684==    by 0x109C87: routine_setup (threads_routine.c:117)
==684==    by 0x10971B: main (main.c:65)
==684== 
==684== ----------------------------------------------------------------
==684== 
==684== Thread #2: Exiting thread still holds 1 lock
==684==    at 0x493EC58: start_thread (pthread_create.c:593)
==684==    by 0x49A7E9B: thread_start (clone.S:79)
==684== 
==684== 
==684== Process terminating with default action of signal 2 (SIGINT)
==684==    at 0x493B698: __futex_abstimed_wait_common64 (futex-internal.c:57)
==684==    by 0x493B698: __futex_abstimed_wait_common (futex-internal.c:87)
==684==    by 0x493B698: __futex_abstimed_wait_cancelable64 (futex-internal.c:139)
==684==    by 0x4940717: __pthread_clockjoin_ex (pthread_join_common.c:102)
==684==    by 0x488CCCF: pthread_join_WRK (hg_intercepts.c:578)
==684==    by 0x109CE3: routine_setup (threads_routine.c:124)
==684==    by 0x10971B: main (main.c:65)
==684== 
==684== Use --history-level=approx or =none to gain increased speed, at
==684== the cost of reduced accuracy of conflicting-access information
==684== For lists of detected and suppressed errors, rerun with: -s
==684== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 739 from 58)
